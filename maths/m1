Problem Statement: Given an integer N, return the number of digits in N.

Examples
Example 1:
Input:N = 12345
Output:5
Explanation:  The number 12345 has 5 digits.
Example 2:
Input:N = 7789
Output: 4
Explanation: The number 7789 has 4 digits.
Disclaimer: Donâ€™t jump directly to the solution, try it out yourself first.

Brute Force Approach
Algorithm / Intuition
To count the number of digits in a number, we can use the algorithm created in Extract Digits as now instead of extracting digits we are simply creating a counter to count the number of digits in the number..

Algorithm:

Step 1:Initialise a counter to store the number of digits.

Step 2:While N is greater than 0, execute the following:

Increment the counter by 1
Update N by removing its last digit by performing a modulo 10 (%10) operation on it.
Step 3:After exiting the while loop, we return the counter as the number of digits.

Code
C++
Java
Python
JavaScript
Copy
                                
import java.util.Scanner;

public class Main {
    // Function to count the number
    // of digits in an integer 'n'.
    public static int countDigits(int n) {
        // Initialize a counter variable
        // 'cnt' to store the count of digits.
        int cnt = 0;
        // While loop iterates until 'n'
        // becomes 0 (no more digits left).
        while (n > 0) {
            // Increment the counter
            // for each digit encountered.
            cnt = cnt + 1;
            // Divide 'n' by 10 to
            // remove the last digit.
            n = n / 10;
        }
        // Return the
        // count of digits.
        return cnt;
    }

    public static void main(String[] args) {
        int N = 329823;
        System.out.println("N: " + N);
        int digits = countDigits(N);
        System.out.println("Number of Digits in N: " + digits);
    }
}

                                
                            
Output: N: 329823

Number of Digits in N: 6

Complexity Analysis
Time Complexity: O(log10N + 1) where N is the input number. The time complexity is determined by the number of digits in the input integer N. In the worst case when N is a multiple of 10 the number of digits in N is log10N + 1.

In the while loop we divide N by 10 until it becomes 0 which takes log10N iterations.
In each iteration of the while loop we perform constant time operations like division and increment the counter.
Space Complexity : O(1) as only a constant amount of additional memory for the counter regardless of size of the input number.
